{"version":3,"sources":["actions/ConcertActions.js","components/HowTo.js","components/TicketDecor.js","containers/Home.js","containers/About.js","components/Header.js","components/NavBar.js","components/forms/ConcertForm.js","containers/Concert.js","containers/ConcertList.js","App.js","reportWebVitals.js","reducers/concertsReducer.js","index.js"],"names":["addConcert","concert","type","payload","deleteConcert","dispatch","fetch","id","method","then","resp","window","location","replace","HowTo","TicketDecor","style","float","padding","paddingLeft","marginTop","src","alt","height","width","Home","className","textAlign","fontSize","paddingRight","borderStyle","borderRadius","borderWidth","borderColor","marginLeft","marginRight","About","paddingTop","Header","link","fontfamily","fontstyle","margin","background","textDecoration","color","border","NavBar","to","exact","activeStyle","React","Component","ConcertForm","state","artist","concert_title","venue","date","genre","comment","handleSubmit","e","preventDefault","props","sendFormWithDispatchFn","onFormChange","name","target","value","setState","console","log","displayFormChange","onSubmit","htmlFor","onChange","this","connect","globalDispatch","obj","configObj","headers","body","JSON","stringify","res","json","Concert","object","onClick","ConcertList","filteredConcerts","concerts","filter","includes","handleChange","displayConcerts","map","instance","for","loading","App","newFetchConcertsWithDispatchFn","path","component","globalState","response","responseJSON","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","concertsReducer","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.faa48613.chunk.js","sourcesContent":["export const addConcert = (concert) => ({ type: \"ADD_CONCERT\", payload: concert})\n\nexport const fetchConcerts = () => {\n  return (dispatch) => {\n    dispatch({ type: 'LOADING_CONCERTS'})\n    fetch(\"http://localhost:3000/concerts\")\n    .then(response => {\n      return response.json()\n    }).then(responseJSON => {\n      // console.log(responseJSON)\n      dispatch({ type: 'SET_CONCERTS', concerts: responseJSON })\n    })\n  }\n}\n\nexport const createConcert = (concert) => {\n  return (dispatch) => {\n    const configObj = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accepts\": \"application/json\"\n      },\n      body: JSON.stringify(concert)\n    }\n    fetch(\"http://localhost:3000/concerts\", configObj)\n    .then(res => res.json())\n    .then(json => {\n      dispatch(addConcert(json))\n    })\n  }  \n}\n\n\nexport const sendForm = (concert) => {\n  return (dispatch) => {\n    const configObj = {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accepts\": \"application/json\"\n      },\n      body: JSON.stringify(concert)\n    }\n    fetch(\"http://localhost:3000/concerts\", configObj)\n    .then(res => res.json())\n    .then(json => {\n      dispatch(addConcert(json))\n      \n    })\n  }  \n}\n\n  \nexport const deleteConcert = (concert) => {\n  return (dispatch) => {\n    fetch(`http://localhost:3000/concerts/${concert.id}.json`,\n     { method: \"DELETE\" })\n    .then(resp => {\n      dispatch({type: 'DELETE_CONCERT', payload: concert})\n      window.location.replace(`http://localhost:3001/`)\n    })\n  }\n}\n\n","import React from 'react'\n\nconst HowTo = () => {\n    return (\n        <div>\n            <p> ðŸŽµ To get started, go to \"Add a Ticket\" to track a concert and start building your collection! ðŸŽµ </p>\n        </div>\n    )\n\n}\nexport default HowTo;","import React from \"react\";\nconst TicketDecor = () => {\n    return(\n    <div>\n        <img\n            style={{ float: \"left\", padding: \"10px\", paddingLeft: \"420px\", marginTop: \"-340px\" }}\n            src=\"https://media.giphy.com/media/MUFlTPzL3fBmwIPiTK/giphy.gif\"\n            alt=\"blinking ticket gif\"\n            height=\"50px\"\n            width=\"50px\"\n        />\n    </div>\n    )\n\n}\nexport default TicketDecor;","import React from \"react\";\nimport HowTo from \"../components/HowTo\";\nimport TicketDecor from \"../components/TicketDecor\";\n\n\nconst Home = () => {\n    return (\n      <div className=\"ticket\">\n        <h3 style={{textAlign: \"left\", paddingLeft: \"50px\"}}>\"<em>Tracking concerts and memories\"</em></h3>\n        <p\n        style={{\n          \n          textAlign: \"center\",\n          fontSize: 21,\n          padding: \"30px\",\n          paddingRight: \"20px\",\n          paddingLeft: \"20px\",\n          borderStyle: \"dashed\",\n          borderRadius: \"25px\",\n          borderWidth: \"2px\",\n          borderColor: \"rgb(34, 3, 31)\",\n          marginLeft: \"20px\",\n          marginRight: \"20px\",\n  \n        }}\n      >\n        <strong>Ticket Tracker</strong> is an application that helps you keep track of \n        your concerts and live shows. It allows you to view concerts you've seen in the past and logs shows you have\n        planned for the future. \n        <span className=\"how-to\"> <HowTo /></span>\n      </p> \n      <div><TicketDecor /></div>\n      </div>\n    );\n  };\nexport default Home;","import React from \"react\";\n\n\nconst About = () => {\n    return (\n      <div>\n        <h3 style={{textAlign: \"left\", paddingLeft: \"50px\", fontSize: \"25px\"}}>About ðŸŽ« :</h3>\n        <p\n        style={{\n          \n          textAlign: \"center\",\n          fontSize: \"21px\",\n          padding: \"60px\",\n          paddingRight: \"50px\",\n          paddingLeft: \"50px\",\n          marginLeft: \"200px\",\n          borderStyle: \"dashed\",\n          borderRadius: \"25px\",\n          borderWidth: \"2px\",\n          borderColor: \"rgb(34, 3, 31)\",\n          width: \"700px\",\n          height: \"600px\"\n          \n\n        }}\n      >\n       <strong>Ticket Tracker</strong> was inspired by my own concert ticket collection from childhood.\n       After every show I would retrieve my tickets and a keep them in a box with other trinkets and photos\n       for safe keeping. Every so often I would take the box out to go through my tickets to relive the memories\n       I had from each concert. Concerts have changed quite a bit since then but tickets continue to be a momento that encapsulates\n       special moments in time. The digitization of tickets and concerts all together is what ultimately \n       inspired me to bring this concept into a new age. \n       <img\n          style={{ float: \"center\", height: \"260px\", width: \"500px\", paddingTop: \"50px\"}}\n          src=\"https://media.giphy.com/media/cgW5iwX0e37qg/giphy.gif\"\n          alt=\"Jake from Adventure Time listening to a walkman\"\n          height=\"50px\"\n          width=\"50px\"\n        />\n\n\n      </p>\n       \n      </div>\n    );\n  };\nexport default About;","import React from 'react'\n\nfunction Header() {\n  return (\n    <div>\n      <h1 style={{ paddingLeft: \"50px\"}}>Ticket Tracker</h1>\n    </div>\n  )\n}\n\nexport default Header;","import React from 'react'\nimport { NavLink } from 'react-router-dom';\n\nconst link = {\n  fontfamily: 'Stick No Bills',\n  fontstyle: 'sans-serif',\n  width: '100px',\n  margin: '0 4px 4px',\n  background: 'rgb(34, 3, 31)',\n  textDecoration: 'none',\n  color: 'white',\n  borderRadius: '30px',\n  border: '1px',\n  padding: '10px',\n  fontSize: '19px',\n}\n\nclass NavBar extends React.Component {\n  render() {\n    return (\n      <div>\n        <NavLink \n          to=\"/\"\n          exact\n          style={link}\n          activeStyle={{\n            background: 'rgb(34, 3, 31)'\n          }}\n        >Home</NavLink>\n        <NavLink\n          to=\"/create\"\n          exact\n          style={link}\n          activeStyle={{\n            background: 'rgb(34, 3, 31)'\n          }}\n        >Add a Ticket</NavLink>\n        <NavLink\n          to=\"/about\"\n          exact\n          style={link}\n          activeStyle={{\n            background: 'rgb(34, 3, 31)'\n          }}\n          >About</NavLink>\n      </div>\n    )\n  }\n}\nexport default NavBar;","import { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { deleteConcert, sendForm } from '../../actions/ConcertActions';\n\n\nclass ConcertForm extends Component {\n\n\n    state = {artist: '',\n    concert_title: '',\n    venue: '',\n    date: '',\n    genre:'',\n    comment:''}\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.sendFormWithDispatchFn(this.state)\n        //props being sent to dispatch a call on it \n        //passing data from one component to another \n        window.location.replace(`http://localhost:3001/`)\n    };\n\n    onFormChange = (e) => {\n        const name = e.target.name\n        const value = e.target.value\n\n        this.setState({\n            [name]: value\n\n        }, () => console.log(this.state))\n    }\n\n      \n\n        displayFormChange = () => {\n           \n            return(\n\n                <div className=\"form-container\">\n                <form id=\"concert-form\" onSubmit={this.handleSubmit}>\n                <h1> Track a Ticket </h1>\n                <div>\n                    <label htmlFor=\"artist\">Artist:</label>\n                    <input name=\"artist\" onChange={this.onFormChange} value={this.state.artist}/>\n                    </div>\n                    <br></br>\n                    <div>\n                    <label htmlFor=\"Concert Title\">Concert Title:</label>\n                    <input  name=\"concert_title\" onChange={this.onFormChange} value={this.state.concert_title}/>\n                    </div>\n                    <br></br>\n                    <div>\n                    <label htmlFor=\"Venue\">Venue:</label>\n                    <input name=\"venue\" onChange={this.onFormChange} value={this.state.venue}/>\n                    </div>\n                    <br></br>\n                    <div>\n                    <label htmlFor=\"Date\">Date:</label>\n                    <input name=\"date\" onChange={this.onFormChange} value={this.state.date} />\n                    </div>\n                    <br></br>\n                    <div>\n                    <label htmlFor=\"Genre\">Genre:</label>\n                    <input name=\"genre\" onChange={this.onFormChange} value={this.state.genre} />\n                    </div>\n                    <br></br>\n                    <div>\n                    <label htmlFor=\"Comment\">Comment:</label>\n                    <input name=\"comment\" onChange={this.onFormChange} value={this.state.comment} />\n                    </div>\n                    <br></br>\n                    <input className=\"submit_btn\" type=\"submit\"  value=\"Add Concert\"/>\n                </form>\n                <img\n          style={{ float: \"left\", paddingLeft: \"215px\", marginTop: \"-400px\" }}\n          src=\"https://media.giphy.com/media/MUFlTPzL3fBmwIPiTK/giphy.gif\"\n          alt=\"blinking ticket gif\"\n          height=\"50px\"\n          width=\"50px\"\n        />\n            </div>\n            )\n        }\n\n\n    render() {\n        console.log(this.props)\n        return (\n            <div>\n                { this.displayFormChange() } \n            </div>\n        );\n    };\n};\n\nconst mdp = (globalDispatch) => {\n    return {\n      deleteConcert: () => globalDispatch(deleteConcert()),\n      sendFormWithDispatchFn: (obj) => globalDispatch(sendForm(obj))\n    }\n  }\n\nexport default connect(null, mdp)(ConcertForm);\n\n\n// connect here doesn't need to map state to props because this component\n// doesn't use the list. it just updates it\n// connect(null, mapDispatchToProps)","import { Component } from 'react';\n\nclass Concert extends Component {\n\n    render() {\n        return (\n            <div className=\"concert-data\"><h1>{this.props.object.artist} ðŸŽ¤   </h1>\n                Concert Title: {this.props.object.concert_title}<br />\n                Venue: {this.props.object.venue} <br />\n                Date: {this.props.object.date} <br />\n                Genre: {this.props.object.genre}<br />\n                Comment: <em> {this.props.object.comment} </em>\n                <button className=\"list-delete-btn\" onClick={() => this.props.deleteConcert(this.props.object)}> Delete X</button>\n                \n            </div>\n        )\n \n    }\n}\nexport default Concert;","import { Component } from 'react'\nimport Concert from \"./Concert\"\nimport {connect} from \"react-redux\"\nimport {deleteConcert} from \"../actions/ConcertActions\"\n// import Counter from \"./Counter\"\nclass ConcertList extends Component {\n\n   state = {\n    genre: 'All'\n    }\n\n    filteredConcerts = () => {\n        \n        return (\n        this.props.concerts.filter(concert => concert.genre.includes(this.state.genre))\n\n        )\n    }\n\n    handleChange = (e) => {\n        this.setState({genre: e.target.value })\n    }\n\n\n    displayConcerts = () => {\n        const concerts = this.state.genre === \"All\" ? this.props.concerts : this.filteredConcerts()\n        return (\n            concerts.map(instance => <Concert deleteConcert={this.props.deleteConcert} object={instance}/> )\n        )\n    }\n\n    render() {\n        return (\n            <div>\n              {/* <Counter /> */}\n                <label for=\"search-concerts\"> Filter by Genre: </label>\n                <select name=\"genres\" id=\"genre\" onChange={this.handleChange} value={this.state.genre}>\n                    <option value=\"All\">All</option>\n                    <option value=\"Rock\">Rock</option>\n                    <option value=\"Rap\">Rap</option>\n                    <option value=\"Heavy Metal\">Heavy Metal</option>\n                    <option value=\"Alternative Country\">Alternative Country</option>\n                    <option value=\"Indie\">Indie</option>\n                    <option value=\"Experimental Pop\">Experimental Pop</option>\n                    <option value=\"Hip Hop\">Hip Hop</option>\n                    <option value=\"Country\">Country</option>\n                    <option value=\"Punk\">Punk</option>\n                    <option value=\"Pop\">Pop</option>\n                    <option value=\"Garage Rock\">Garage Rock</option>\n                </select>\n                \n        \n                <h1 className=\"c-index\">Concert Index:</h1>\n                {!this.props.loading ? this.displayConcerts() : \"loading\"}\n\n               \n            </div>\n        )\n    }\n}\n\n\nexport default connect(state => {\n    return {\n        concerts: state.concerts,\n        loading: state.loading\n    }\n}, { deleteConcert }\n)(ConcertList);\n\n\n\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchConcerts } from './actions/ConcertActions'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './index.css';\nimport './App.css';\nimport Home from \"./containers/Home\";\nimport About from \"./containers/About\";\nimport Header from \"./components/Header\";\nimport NavBar from \"./components/NavBar\";\nimport ConcertForm from \"./components/forms/ConcertForm\";\nimport ConcertList from \"./containers/ConcertList\";\n\n\n\nclass App extends Component {\n\n\n  componentDidMount() {\n    this.props.newFetchConcertsWithDispatchFn()\n  }\n\n\n    render() {\n      console.log(this.props)\n      return (\n\n        <Router>\n          <div className=\"app\">\n            <NavBar />\n            <Header />\n            <Route path=\"/\" component={Home} />\n            <Route path=\"/create\" component={ConcertForm} />\n            <Route path=\"/about\" component={About} />\n            <div style={{ paddingLeft: \"900px\" }} className=\"concert-list\">\n            </div>\n            <div>\n            </div>\n            <ConcertList />\n     \n          </div>\n        </Router>\n      );\n    }\n  }\n\n\n\n  const mdp = (globalDispatch) => {\n    return {\n      newFetchConcertsWithDispatchFn: () => globalDispatch(fetchConcerts())\n    }\n  }\n\n  const msp = (globalState) => (globalState)\n\nexport default connect(msp, mdp)(App);\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const concertsReducer = (state = { concerts: [], loading: false }, action) => {\n  \n  switch(action.type) {\n    case 'LOADING_CONCERTS':\n      return {\n        ...state,\n        concerts: [...state.concerts],\n        loading: true\n      }\n    //case 'ADD_CONCERT':\n      // adds one more concert to the concert array (don't mutate the array - create a new one)\n      case 'ADD_CONCERT':\n        return {\n          ...state, \n          concerts: [state.concerts, action.concert],\n          loading: false\n        }\n      case \"SET_CONCERTS\":\n        return {\n          ...state,\n          concerts: action.concerts,\n          loading: false\n        }\n      case 'DELETE_CONCERT':\n        return {\n          concerts: state.concerts.filter(concert => concert.id !== action.payload.id),\n          ...state\n        }\n\n    default:\n      return state;\n  }\n  \n}\n\nexport default concertsReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport concertsReducer from \"./reducers/concertsReducer\";\n\nconst store = createStore(concertsReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}